"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const url_1 = require("url");
const UrlPattern = require("url-pattern");
const sanitize = require('sanitize-filename');
const lodashTemplate = require('lodash.template');
const userPattern = new UrlPattern('/user/:username');
const channelPattern = new UrlPattern('/channel/:channelId');
function extractPlaylistId(url) {
    const urlData = url_1.parse(url, true, true);
    let playlistId = null;
    if (urlData.query.list) {
        playlistId = urlData.query.list;
    }
    return playlistId;
}
exports.extractPlaylistId = extractPlaylistId;
function extractVideoId(url) {
    const urlData = url_1.parse(url, true, true);
    let videoId = null;
    if (urlData.query.v) {
        videoId = urlData.query.v;
    }
    return videoId;
}
exports.extractVideoId = extractVideoId;
function extractChannelId(url) {
    const urlData = url_1.parse(url, true, true);
    let channelId = null;
    const channelData = channelPattern.match(urlData.pathname);
    if (channelData !== null && channelData.channelId) {
        channelId = channelData.channelId;
    }
    return channelId;
}
exports.extractChannelId = extractChannelId;
function extractUsername(url) {
    const urlData = url_1.parse(url, true, true);
    let username = null;
    const userData = userPattern.match(urlData.pathname);
    if (userData !== null && userData.username) {
        username = userData.username;
    }
    return username;
}
exports.extractUsername = extractUsername;
function createChannelUrl(channelId) {
    return `https://www.youtube.com/channel/${channelId}`;
}
exports.createChannelUrl = createChannelUrl;
function createUserUrl(username) {
    return `https://www.youtube.com/user/${username}`;
}
exports.createUserUrl = createUserUrl;
function createPlaylistUrl(playlistId) {
    return `https://www.youtube.com/playlist?list=${playlistId}`;
}
exports.createPlaylistUrl = createPlaylistUrl;
function createVideoUrl(videoId) {
    return `https://www.youtube.com/watch?v=${videoId}`;
}
exports.createVideoUrl = createVideoUrl;
function createThumbnails(videoId) {
    return {
        background: imageUrl(videoId, '0'),
        start: imageUrl(videoId, '1'),
        middle: imageUrl(videoId, '2'),
        end: imageUrl(videoId, '3'),
        high: imageUrl(videoId, 'hqdefault'),
        medium: imageUrl(videoId, 'mqdefault'),
        normal: imageUrl(videoId, 'default'),
        hd: imageUrl(videoId, 'maxresdefault'),
        sd: imageUrl(videoId, 'sddefault')
    };
}
exports.createThumbnails = createThumbnails;
;
function imageUrl(videoId, image) {
    return `https://i1.ytimg.com/vi/${videoId}/${image}.jpg`;
}
function makeAbsolute(path, host = 'https://youtube.com') {
    if (host.endsWith('/'))
        host = host.slice(0, -1);
    return path.startsWith('/') ? (host + path) : path;
}
exports.makeAbsolute = makeAbsolute;
function scrubString(text) {
    return sanitize(text);
}
exports.scrubString = scrubString;
function scrubObject(target) {
    let result = {};
    Object.keys(target).forEach(key => {
        let val = target[key];
        result[key] = typeof val === 'string' ? scrubString(val).trim() : val;
    });
    return result;
}
exports.scrubObject = scrubObject;
function template(format) {
    function customTemplate(data) {
        data = scrubObject(data);
        return customTemplate.lodashTemplate(data);
    }
    customTemplate.format = format;
    customTemplate.lodashTemplate = lodashTemplate(format);
    return customTemplate;
}
exports.template = template;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2QkFBNEI7QUFDNUIsMENBQTBDO0FBQzFDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQzlDLE1BQU0sY0FBYyxHQUFnRCxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQUkvRixNQUFNLFdBQVcsR0FBRyxJQUFJLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3RELE1BQU0sY0FBYyxHQUFHLElBQUksVUFBVSxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFFN0QsU0FBZ0IsaUJBQWlCLENBQUMsR0FBVztJQUN6QyxNQUFNLE9BQU8sR0FBRyxXQUFLLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2QyxJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFFdEIsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtRQUNwQixVQUFVLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFjLENBQUM7S0FDN0M7SUFFRCxPQUFPLFVBQVUsQ0FBQztBQUN0QixDQUFDO0FBVEQsOENBU0M7QUFFRCxTQUFnQixjQUFjLENBQUMsR0FBVztJQUN0QyxNQUFNLE9BQU8sR0FBRyxXQUFLLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2QyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFFbkIsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtRQUNqQixPQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFXLENBQUM7S0FDdkM7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBVEQsd0NBU0M7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBQyxHQUFXO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLFdB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