export interface ProgressBarOptions<T> {
    windowSize?: number;
    width?: number;
    complete?: string;
    incomplete?: string;
    template?: (el: ProgressBarTickData<T>) => string;
}
export interface ProgressBarTickData<T> {
    data?: T;
    bar: string;
}
export declare class ProgressBar<T> {
    private _progress;
    private _width;
    private _completeChar;
    private _incompleteChar;
    private _template;
    private _start;
    private _indeterminateBar;
    constructor(options?: ProgressBarOptions<T>);
    tick(progress?: number, data?: T): void;
    log(msg: string): void;
    done(): void;
    clear(): void;
    private _createIndeterminateBar;
    private _renderStandardBar;
    private _renderIndeterminateBar;
}
